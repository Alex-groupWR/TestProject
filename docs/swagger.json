{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Petstore server.",
        "title": "Swagger Example API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/create": {
            "get": {
                "description": "Create a new song with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Create a new song",
                "operationId": "create-song",
                "parameters": [
                    {
                        "description": "Song property",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SongDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorBadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorInternalServerResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/delete": {
            "get": {
                "description": "Delete song id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "operationId": "delete-song",
                "parameters": [
                    {
                        "description": "id delete song",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteSongDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorBadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorNotFoundResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/getTrackText": {
            "get": {
                "description": "Retrieve a specific part of the track text based on the provided page number and song ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Get a specific part of the track text",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "description": "Song ID",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.QueryTextSongDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseTextSongDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorBadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorNotFoundResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/info": {
            "get": {
                "description": "Retrieve detailed information about a song based on the provided query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Get detailed information about a song",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group of the song",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the song",
                        "name": "song",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseInfoSongDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorBadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorInternalServerResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/playlist": {
            "get": {
                "description": "Retrieve a list of songs with pagination and optional filtering by group, song, release date, text, and link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Get a list of songs with pagination and filtering",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by group",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by song",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by release date",
                        "name": "releaseDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by link",
                        "name": "link",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of songs",
                        "schema": {
                            "$ref": "#/definitions/dto.PlaylistResponseDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorInternalServerResponse"
                        }
                    }
                }
            }
        },
        "/songs/update": {
            "get": {
                "description": "Update the details of a song based on the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Update a song",
                "parameters": [
                    {
                        "description": "Song property",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateSongDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorBadRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorInternalServerResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.DeleteSongDTO": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.ErrorBadRequestResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "dto.ErrorInternalServerResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Internal Server Error"
                }
            }
        },
        "dto.ErrorNotFoundResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Song not found"
                }
            }
        },
        "dto.PlaylistResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ResponseSongDTO"
                    }
                },
                "limit": {
                    "type": "integer",
                    "example": 15
                },
                "page": {
                    "type": "integer",
                    "example": 3
                },
                "total": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.QueryTextSongDTO": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "dto.ResponseInfoSongDTO": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string",
                    "example": "example.com"
                },
                "releaseDate": {
                    "type": "string",
                    "example": "16.07.2006"
                },
                "text": {
                    "type": "string",
                    "example": "I'm a sad guy, a humid day\n the humidity of my line"
                }
            }
        },
        "dto.ResponseOK": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "string",
                    "example": "true"
                }
            }
        },
        "dto.ResponseSongDTO": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string",
                    "example": "Young Rus"
                },
                "link": {
                    "type": "string",
                    "example": "example.com"
                },
                "releaseDate": {
                    "type": "string",
                    "example": "16.07.2006"
                },
                "song": {
                    "type": "string",
                    "example": "NeonBones"
                },
                "text": {
                    "type": "string",
                    "example": "I'm a sad guy, a humid day\n the humidity of my line"
                }
            }
        },
        "dto.ResponseTextSongDTO": {
            "type": "object",
            "properties": {
                "part": {
                    "type": "integer",
                    "example": 1
                },
                "text": {
                    "type": "string",
                    "example": "I'm a sad guy, a humid day"
                },
                "totalPart": {
                    "type": "integer",
                    "example": 12
                }
            }
        },
        "dto.SongDTO": {
            "type": "object",
            "required": [
                "group",
                "link",
                "releaseDate",
                "song",
                "text"
            ],
            "properties": {
                "group": {
                    "type": "string",
                    "example": "Young Rus"
                },
                "link": {
                    "type": "string",
                    "example": "example.com"
                },
                "releaseDate": {
                    "type": "string",
                    "example": "16.07.2006"
                },
                "song": {
                    "type": "string",
                    "example": "NeonBones"
                },
                "text": {
                    "type": "string",
                    "example": "I'm a sad guy, a humid day\n the humidity of my line"
                }
            }
        },
        "dto.UpdateSongDTO": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "group": {
                    "type": "string",
                    "example": "Young Rus"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "link": {
                    "type": "string",
                    "example": ""
                },
                "releaseDate": {
                    "type": "string",
                    "example": "16.07.2026"
                },
                "song": {
                    "type": "string",
                    "example": "Fresh Soft"
                },
                "text": {
                    "type": "string",
                    "example": "I'm a sad guy, a humid day\n the humidity of my line\n the humidity of my line"
                }
            }
        }
    }
}